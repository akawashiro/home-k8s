- hosts: all
  become: true
  name: Disable swap
  tasks:
    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
    - name: Disable swap
      ansible.builtin.shell: systemctl mask swap.target
    - name: Reboot
      ansible.builtin.reboot: reboot_timeout=600
      become: true
    - name: Ping Connection
      ansible.builtin.ping:
- hosts: all
  become: true
  name: Initialize nodes
  tasks:
    - name: Update apt
      ansible.builtin.apt:
        update_cache: true
    - name: Install fundamental packages
      ansible.builtin.apt:
        name:
          - containerd
          - apt-transport-https
          - ca-certificates
          - curl
    - name: Set up containerd
      ansible.builtin.shell:
        cmd: "cat <<EOF | tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOF\nmodprobe overlay\nmodprobe br_netfilter\n# Copied from \n# https://kubernetes.io/ja/docs/setup/production-environment/container-runtimes/#ipv4%E3%83%95%E3%82%A9%E3%83%AF%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%92%E6%9C%89%E5%8A%B9%E5%8C%96%E3%81%97-iptables%E3%81%8B%E3%82%89%E3%83%96%E3%83%AA%E3%83%83%E3%82%B8%E3%81%95%E3%82%8C%E3%81%9F%E3%83%88%E3%83%A9%E3%83%95%E3%82%A3%E3%83%83%E3%82%AF%E3%82%92%E8%A6%8B%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B\n# Kernel parameters\ncat <<EOF | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\nEOF\n# Apply kernel parameters without reboot\nsysctl --system\nmkdir -p /etc/containerd\ncontainerd config default | tee /etc/containerd/config.toml\n# https://rabbit-note.com/2022/08/09/build-kubernetes-home-cluster/\nsed -i 's/SystemdCgroup \\= false/SystemdCgroup \\= true/g' /etc/containerd/config.toml\nsystemctl restart containerd\n"
    - name: Download Google Cloud public key
      ansible.builtin.shell: rm -f /etc/apt/keyrings/kubernetes-archive-keyring.gpg && curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
    - name: Add kubernetes apt repository
      ansible.builtin.shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
    - name: Update apt
      ansible.builtin.apt:
        update_cache: true
    - name: Install kubelet kubeadm kubectl
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
    - name: Hold kubelet
      ansible.builtin.dpkg_selections:
        name: kubelet
        selection: hold
    - name: Hold kubeadm
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: hold
    - name: Hold kubectl
      ansible.builtin.dpkg_selections:
        name: kubectl
        selection: hold
- hosts: k8s-masternode1
  become: true
  name: Initialize control plane
  tasks:
    - name: Run kubeadm
      ansible.builtin.shell: kubeadm init --apiserver-advertise-address=192.168.11.71 --pod-network-cidr=172.16.0.0/20
    - name: Enable for normal users to run kubectl
      ansible.builtin.shell:
        cmd: |
          mkdir -p /home/vagrant/.kube
          cp -f /etc/kubernetes/admin.conf /home/vagrant/.kube/config
          chown vagrant:vagrant /home/vagrant/.kube/config
- hosts: k8s-masternode1
  name: Get join command
  become: true
  tasks:
    - name: Get join command
      ansible.builtin.shell: kubeadm token create --print-join-command > /home/vagrant/join-command
      tags:
        - join
    - name: Copy join command from k8s-masternode1 to local
      ansible.builtin.fetch:
        src: /home/vagrant/join-command
        dest: join-command/
        flat: true
      tags:
        - join
- hosts: k8s-workernode1:k8s-workernode2
  name: Join workernodes to the kubernetes
  become: true
  tasks:
    - name: Copy join command to k8s-workernodes
      ansible.builtin.copy:
        src: join-command/join-command
        dest: /home/vagrant/join-command
      tags:
        - join
    - name: Run join command on workernodes
      ansible.builtin.shell:
        cmd: |
          chmod u+x /home/vagrant/join-command
          /home/vagrant/join-command
      tags:
        - join
- hosts: k8s-masternode1
  name: Install CNI
  tasks:
    - name: Install the Tigera Calico operator and custom resource definitions
      ansible.builtin.shell: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/tigera-operator.yaml
      tags:
        - CNI
    - name: Install Calico by creating the necessary custom resource
      ansible.builtin.shell:
        cmd: |
          curl https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/custom-resources.yaml > custom-resources.yaml
          sed s:192.168.0.0/16:172.16.0.0/20:g -i custom-resources.yaml
          kubectl create -f custom-resources.yaml
      tags:
        - CNI
- hosts: all
  name: Install calicoctl
  become: true
  tasks:
    - name: Install calicoctl
      ansible.builtin.get_url:
        url: https://github.com/projectcalico/calicoctl/releases/download/v3.17.1/calicoctl
        dest: /usr/bin/calicoctl
        mode: '0755'
      tags:
        - calicoctl
