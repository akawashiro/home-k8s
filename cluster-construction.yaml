- hosts: all
  become: yes
  tasks:
    - name: Disable swap 
      shell:
        cmd: |
          sed -e '/swap/ s/^#*/#/' -i /etc/fstab
          systemctl mask swap.target

- hosts: all
  tasks:
  - name: Reboot
    ansible.builtin.reboot: reboot_timeout=600
    become: true
  - name: Ping Connection
    ansible.builtin.ping:

- hosts: all
  become: yes
  tasks:
    - name: container
      shell:
        cmd: |
          cat <<EOF | tee /etc/modules-load.d/k8s.conf
          overlay
          br_netfilter
          EOF
          modprobe overlay
          modprobe br_netfilter
          # この構成に必要なカーネルパラメーター、再起動しても値は永続します
          cat <<EOF | tee /etc/sysctl.d/k8s.conf
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
          EOF
          # 再起動せずにカーネルパラメーターを適用
          sysctl --system
          apt-get update
          # コンテナランタイムのcontainerdをインストールします
          apt-get install -y containerd
          mkdir -p /etc/containerd
          containerd config default | tee /etc/containerd/config.toml
          # https://rabbit-note.com/2022/08/09/build-kubernetes-home-cluster/
          sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
          systemctl restart containerd
    - name: apt update
      apt:
        update_cache: yes
    - name: aptのパッケージ一覧を更新し、Kubernetesのaptリポジトリを利用するのに必要なパッケージをインストールします
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
    - name: Google Cloudの公開鍵をダウンロードします
      shell:
        rm -f /etc/apt/keyrings/kubernetes-archive-keyring.gpg && curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
    - name: Kubernetesのaptリポジトリを追加します
      shell:
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
    - name: apt update
      apt:
        update_cache: yes
    - name: aptのパッケージ一覧を更新し、kubelet、kubeadm、kubectlをインストールします。そしてバージョンを固定します
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
    - name: Hold kubelet
      ansible.builtin.dpkg_selections:
        name: kubelet
        selection: hold
    - name: Hold kubeadm
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: hold
    - name: Hold kubectl
      ansible.builtin.dpkg_selections:
        name: kubectl
        selection: hold

- hosts: k8s-masternode1
  become: yes
  tasks:
    - name: コントロールプレーンノードの初期化
      shell:
        kubeadm init --apiserver-advertise-address=192.168.11.71 --pod-network-cidr=172.16.0.0/20
    - name:
      shell:
        cmd: |
          mkdir -p /home/vagrant/.kube
          cp -f /etc/kubernetes/admin.conf /home/vagrant/.kube/config
          chown vagrant:vagrant /home/vagrant/.kube/config

- hosts: k8s-masternode1
  become: yes
  tasks:
    - name: Get join command
      shell:
          kubeadm token create --print-join-command > /home/vagrant/join-command
      tags:
         - join
    - name: Copy join command from k8s-masternode1 to local
      fetch: 
        src: /home/vagrant/join-command
        dest: join-command/
        flat: yes
      tags:
         - join

- hosts: k8s-workernode1:k8s-workernode2
  tasks:    
   - name: Copy join command to k8s-workernodes
     copy:
       src: join-command/join-command
       dest: /home/vagrant/join-command
     tags:
       - join

- hosts: k8s-workernode1:k8s-workernode2
  become: yes
  tasks:
    - name: Run join command on workernodes
      shell:
        cmd: |
          chmod u+x /home/vagrant/join-command
          /home/vagrant/join-command
      tags:
         - join

- hosts: k8s-masternode1
  tasks:
    - name: Install the Tigera Calico operator and custom resource definitions
      shell:
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/tigera-operator.yaml
      tags:
         - CNI

- hosts: k8s-masternode1
  tasks:
    - name: Install Calico by creating the necessary custom resource
      shell:
        cmd: |
          curl https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/custom-resources.yaml > custom-resources.yaml
          sed s:192.168.0.0/16:172.16.0.0/20:g -i custom-resources.yaml
          kubectl create -f custom-resources.yaml
      tags:
         - CNI
